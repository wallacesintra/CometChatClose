plugins {
    alias(libs.plugins.android.application)
    alias(libs.plugins.jetbrains.kotlin.android)
    id("org.jetbrains.kotlin.plugin.serialization") version "1.9.10"
}

def envPropertiesFile = rootProject.file("env.properties")
def envProperties = new Properties()
if (envPropertiesFile.exists()) {
    envPropertiesFile.withInputStream { envProperties.load(it) }
}



android {
    namespace 'com.example.cometchatclose'
    compileSdk 34

    defaultConfig {
        applicationId "com.example.cometchatclose"
        minSdk 24
        targetSdk 34
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'


            buildConfigField(
                    "String",
                    "APP_ID",
                    "\"${envProperties['APP_ID']}\""
            )
            buildConfigField(
                    "String",
                    "REGION",
                    "\"${envProperties['REGION']}\""
            )
            buildConfigField(
                    "String",
                    "AUTH_KEY",
                    "\"${envProperties['AUTH_KEY']}\""
            )
            buildConfigField(
                    "String",
                    "REST_API_KEY",
                    "\"${envProperties['REST_API_KEY']}\""
            )

        }

        debug {
            buildConfigField(
                    "String",
                    "APP_ID",
                    "\"${envProperties['APP_ID']}\""
            )
            buildConfigField(
                    "String",
                    "REGION",
                    "\"${envProperties['REGION']}\""
            )
            buildConfigField(
                    "String",
                    "AUTH_KEY",
                    "\"${envProperties['AUTH_KEY']}\""
            )
            buildConfigField(
                    "String",
                    "REST_API_KEY",
                    "\"${envProperties['REST_API_KEY']}\""
            )
        }

    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        compose true
        buildConfig  true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.5.1'
    }
    packaging {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

dependencies {

    //comet chat
    implementation 'com.cometchat:chat-sdk-android:4.0.6'

    //navigation
    def nav_version = "2.7.7"

    implementation "androidx.navigation:navigation-compose:$nav_version"

    //serialization
    implementation("org.jetbrains.kotlinx:kotlinx-serialization-json:1.6.3")

    //retrofit
    implementation("com.jakewharton.retrofit:retrofit2-kotlinx-serialization-converter:1.0.0")
    implementation("com.squareup.retrofit2:retrofit:2.10.0")
    implementation("com.squareup.okhttp3:okhttp:4.12.0")
    implementation("io.coil-kt:coil-compose:2.6.0")

    //okhttp
    // define a BOM and its version
    implementation(platform("com.squareup.okhttp3:okhttp-bom:4.12.0"))

    // define any required OkHttp artifacts without version
    implementation("com.squareup.okhttp3:okhttp")
    implementation("com.squareup.okhttp3:logging-interceptor")

    //gson
    implementation 'com.google.code.gson:gson:2.11.0'

    implementation libs.androidx.core.ktx
    implementation libs.androidx.lifecycle.runtime.ktx
    implementation libs.androidx.activity.compose
    implementation platform(libs.androidx.compose.bom)
    implementation libs.androidx.ui
    implementation libs.androidx.ui.graphics
    implementation libs.androidx.ui.tooling.preview
    implementation libs.androidx.material3
    testImplementation libs.junit
    androidTestImplementation libs.androidx.junit
    androidTestImplementation libs.androidx.espresso.core
    androidTestImplementation platform(libs.androidx.compose.bom)
    androidTestImplementation libs.androidx.ui.test.junit4
    debugImplementation libs.androidx.ui.tooling
    debugImplementation libs.androidx.ui.test.manifest
}